# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# User specific aliases and functions
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi


# One-time setup stuff because of:
# - variable appending
# - run-once specific
if [ -z "${PURG_BASH_ACTIVE}" ]
then

  # CUDA Toolkit
  export PATH=/usr/local/cuda/bin:${PATH}
  export LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH}

  # Opt install root
  export PATH=/opt/local/bin:${PATH}
  export LD_LIBRARY_PATH=/opt/local/lib64:/opt/local/lib:${LD_LIBRARY_PATH}
  export MANPATH=/opt/local/share/man:${MANPATH}

  # Miniconda env
  export PATH=${HOME}/miniconda/bin:${PATH}
  export PATH=${HOME}/miniconda2/bin:${PATH}
  export PATH=${HOME}/miniconda3/bin:${PATH}

  # Home install root
  export PATH=${HOME}/.local/bin:${PATH}
  export LD_LIBRARY_PATH=${HOME}/.local/lib64:${HOME}/.local/lib:${LD_LIBRARY_PATH}
  export MANPATH=${HOME}/.local/share/man:${MANPATH}

  export PURG_BASH_ACTIVE=1
fi  # PURG_BASH_ACTIVE


#
# Constant Variables
#
export EDITOR=vim
export LESS="RM"

export VAGRANT_DEFAULT_PROVIDER=virtualbox


# After this, we only setup things meant for interactive consoles
if [[ $- = *i* ]]; then
  #
  # Activate bash completion script if present
  #
  if [ -f /etc/bash_completion ]
  then
    . /etc/bash_completion
  elif [ -f /usr/share/bash-completion/bash_completion ]
  then
    . /usr/share/bash-completion/bash_completion
  fi

  #
  # dircolors setup
  #
  if [ -x /usr/bin/dircolors ]
  then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  fi

  #
  # Setup git things
  #
  # Activate git prompting when requisite file available
  if [ -f /usr/share/git-core/contrib/completion/git-prompt.sh ]
  then
      . /usr/share/git-core/contrib/completion/git-prompt.sh
  elif [ -f /usr/lib/git-core/git-sh-prompt ]
  then
    . /usr/lib/git-core/git-sh-prompt
  fi
  GIT_PS1_SHOWDIRTYSTATE=1

  #
  # PS1 command line customization
  #
  # Color a little for highlighting where the promt is.
  #
  # Forcing color support if possible (borrowed from ubuntu bashrc).
  if [ -x /usr/bin/tput ] && tput setaf 1 &>/dev/null
  then
    color_prompt=1
  else
    if [ "$TERM" = cygwin ]
    then
      color_prompt=1
    else
      unset color_prompt
    fi
  fi

  if [ "${color_prompt}" ]
  then
    PS1='[\[\033[01;32m\]\u@\h \[\033[01;34m\]\W\[\033[00m\]$(__git_ps1 " (%s)")]\$ '
  else
    PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '
  fi

  #
  # Add ssh agent env variables if not found
  #
  if [ "${SSH_AGENT_PID}" = "" ]
  then
    eval $(keychain --agents ssh --eval --quiet)
  fi

  #
  # History controls
  #
  # Don't put duplicate lines or lines starting with a space in the history. 
  HISTCONTROL=ignoreboth
  # Append to hist instead of overwriting.
  shopt -s histappend

  #
  # Activate nvm install if present.
  #
  export NVM_DIR="${HOME}/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

fi

